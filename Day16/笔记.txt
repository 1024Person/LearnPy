类 和 对象，是有区别的，
类是对象的共性，对象一定拥有共性，但是对象还有自己的个性
类属性和类方法
对象属性和对象方法

类方法，普通方法，魔术方法，静态方法
普通方法：依赖于对象，self.age如果，在对象中没有这个属性的就会去找类的属性，
                    也就是说，先找对象，再找类
类方法：装饰器@classmothed
                属于类，不依赖于方法，在对象之前存在，只能操作类的属性和方法，
                存在任何对象之前，和类同时产生

魔方方法：依赖于对象，__init__添加对象属性，

静态方法：@staticmothed
                和类方法非常相似，区别：装饰器不同，不用传参数，
                共同之处：属于类，都不依赖于对象，都是在对象产生之前的，都只能操作类，不能操作对象



类和对象的区别：类属性和类方法
                              类属性属于类，也属于所有对象（每个对象中都有单独的类属性）
                              类属性一般是固定下来的，不用再更改得
                              对象属性只属于对象，类不能调用
                              普通方法只能由对象调用
各种魔术方法：
    常用方法（一般重写）：__init__(),         __str__()
    了解方法（一般不重写）：_del__()          __new__()          __call__()

     __init__初始化对象：创建完空间之后的第一个方法
     __new__内存从无到有：创建空间的方法（自己一般不用写）
     __str__()返回值：提示对象的信息
     __call__()把对象当做函数调用：把对象名字当做函数调用
     __del__()析构函数:python中的垃圾回收机制，
                     如果没有标签贴在这块地址上那么python解释器将会回收这块内存
                     同样，如果程序还没有结束，但是已经没有标签指向这块内存的话，python解释器同样会调用del，将这块内存回收

---------------------------------------------------------------大总结---------------------------------------------------------------------------------
类 和 对象
    类：类是对象的模板，类有自己的属性，类的属性是所有对象的共同属性（就是变量的值都一样）
            类的属性一般是不会再更改的属性
            但是，并不是说类的属性就是一定不可以改变的，要改变类的属性有两种方法：
                1、通过单个对象（self）改变类的属性：--------->这样不会改变其他对象中 类 的 属性
                2、通过类名或者类方法来直接改变类属性，----->结果所有对象中的类属性都会被改变
    对象：对象是通过类定义出来的，对象是类的一个  超集  ，类有的对象也有，对象有的类不一定有

    方法：再类中的方法都要接受一个self参数或者cls参数，self就像是C++中的this指针一样，
               在C++的类中，每一个类中函数都会被编译器自动传入一个this指针指向的是当前调用者对象，只不过我们看不到而已，
               但是在C++重载对象的运算符那里就可以看到，重载+运算符参数列表中只传入了一个参数，
               但是要进行加法运算至少要用两个操作数，这是因为在类中的每一个方法中编译器都会自动传入一个this指针作为参数
               在python中我们看的更清楚了一点，因为每一个方法的形参列表中都会有一个self参数，但是在实参中可以不用写self
               在python中，一切操作对象的动作都要通过self来进行


        普通方法：属于对象，通过对象来调用，类无法调用
            定义：通过def直接定义的，和普通函数没什么两样，除了传参要默认传入一个self
            调用：需要通过对象名字加上’.‘才能调用，
            传参：参数列表中传入的参数是self
        魔术方法：系统自己调用，不用通过类或者对象来调用
            定义：__名字__(self):
            调用：解释器己调用，不需要对象和类来调用


        静态方法：没有默认参数但是可以传参，可以操作对象和类就看传入的参数是怎么样的了
            定义： def前面加上@staticmethod
            调用：可以通过对象和类进行调用
            传参:参数列表中没有（默认）参数要入
        类方法：属于类的，对象不能调用，只能操作类（包括类的属性和方法），用的最多的
            定义：在函数名字前面加上@classmethod
            调用：通过类名加上'.'来调用
            传参：参数列表中传入的参数是cls

